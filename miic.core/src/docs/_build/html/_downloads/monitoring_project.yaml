#### Project wide parameters
# lowest level project directory
proj_dir : 'monitoring_project'
# directory for logging information
log_subdir : 'log'
# folder for figures
fig_subdir : 'figures'

#### parameters that are network specific
net:
    # list of stations used in the project
    # type: list of strings of type 'NET.STATION'
    stations : ['GR.CLL','GR.CLZ','GR.RUE']
    # list of channels
    # type: list of strings
    channels : ['BHZ','BHN','BHE']
    # path to the file that stores the coordinates of the stations
    # type: string
    coordinate_file : 'coordinates.txt'
    # file system structure
    # list of strings and lists
    fss : ['/DATA/mseed','%STA',['%sta','%y','%m','%d','??????','.','%cha']]


#### parameters for correlation (emperical Green's function creation)
co:
    # subdirectory of 'proj_dir' to store correlation
    # type: string
    subdir : 'corr'
    # times sequences to read for cliping or muting on stream basis
    # These should be long enough for the reference (e.g. the standard
    # deviation) to be rather independent of the parts to remove
    # type: string
    read_start : '2015-05-1 00:00:01.0'
    read_end : '2016-1-1 00:00:00.0'
    # type: float [seconds]
    read_len : 86398
    read_inc : 86400

    # required input sampling rate (data with different sampling rate are not used)
    # type: float [Hz]
    sampling_rate : 100
    # decimation factor (sampling_rate(correlation)=sampling_rate(date)/decimation)
    # decimation <= 1 mean no decimation
    # type: int
    decimation : 5

    # Method to combine different traces
    combination_method : 'betweenStations'

    # preprocessing of the original length time series
    # these function work on an obspy.Stream object given as first argument
    # and return an obspy.Stream object.
    preProcessing : [{'function':'miic.core.stream.stream_filter',
                      'args':{'ftype':'bandpass',
                              'filter_option':{'freqmin':0.01,
                                               'freqmax':9},
                              'parallel':False}},
                     #{'function':'miic.core.stream.stream_mute',
                     # 'args':{'taper_len':100,
                     #         'mute_method':'std_factor',
                     #         'mute_value':3}}
                    ]
    # subdevision of the read sequences for correlation
    # type: presence of this key 
    subdivision:
        # type: float [seconds]
        corr_inc : 3600
        corr_len : 3600
        # recombine these subdivisions
        # type: boolean
        recombine_subdivision : True
        # delete 
        # type: booblean
        delete_subdivisions : False

    # parameters for correlation preprocessing
    corr_args : {'TDpreProcessing':[#{'function':'miic.core.pxcorr_func.detrend',
                                    # 'args':{'type':'constant'}},
                                   #{'function':'miic.core.pxcorr_func.TDfilter',
                                   # 'args':{'type':'bandpass','freqmin':0.01,'freqmax':4}},
                                    #{'function':'miic.core.pxcorr_func.mute',
                                    # 'args':{'taper_len':100.,
                                           # 'threshold':1000, absolute threshold
                                    #         'std_factor':3,
                                    #         'filter':{'type':'bandpass','freqmin':2,'freqmax':4},
                                    #         'extend_gaps':True}},
                                   {'function':'miic.core.pxcorr_func.clip',
                                    'args':{'std_factor':3}},
                                   ],
                 'FDpreProcessing':[{'function':'miic.core.pxcorr_func.spectralWhitening',
                                     'args':{'joint_norm':False}},
                                    {'function':'miic.core.pxcorr_func.FDfilter',
                                     'args':{'freqs':[0.01,0.02,9,10]}}
                                    ],
                 'lengthToSave':100,
                 'center_correlation':True,      # make sure zero correlation time is in the center
                 'normalize_correlation':True,
                 'combinations':[],
                 'direct_output':{'function':'convert_to_matlab',
                                  'base_name':'trace'}
                }

    # Component rotation (only possible if 'direct_output' is not in 'corr_args')
    # type: string ['NO', 'ZNE->ZRT', 'NE->RT']
    rotation : 'NO'


#### parameters for the estimation of time differences
dv:
    # subfolder for storage of time difference results
    subdir : 'vel_change'

    # Plotting
    plot_vel_change : True

    ### Definition of calender time windows for the time difference measurements
    start_date : '2015-05-01 00:00:00.0'   # %Y-%m-%dT%H:%M:%S.%fZ'
    end_date : '2016-01-01 00:00:00.0'
    win_len : 86400                         # length of window in which EGFs are stacked
    date_inc : 86400                        # increment of measurements

    ### Frequencies
    freq_min : 0.1
    freq_max : 0.5

    ### Definition of lapse time window
    tw_start : 20     # lapse time of first sample [s]
    tw_len : 60       # length of window [s]
    
    ### Range to try stretching
    stretch_range : 0.03
    stretch_steps : 1000




#### parameters for the estimation of time differences
dt:
    # subfolder for storage of time difference results
    subdir : 'time_diffs'
    res_dir : ''

    # Plotting
    plot_corr_matrix : True
    plot_time_shifts : True

    ### Definition of calender time windows for the time difference measurements
    start_date : '2015-05-01 00:00:00.0'   # %Y-%m-%dT%H:%M:%S.%fZ'
    end_date : '2016-05-01 00:00:00.0'
    win_len : 86400                         # length of window in which EGFs are stacked
    date_inc : 86400                        # increment of measurements

    ### Frequencies
    freq_min : 0.1
    freq_max : 0.5

    ### Definition of lapse time window
    tw_start : 0     # lapse time of first sample [s]
    tw_len : 20       # length of window [s]
    
    ### Range to try shifting
    shift_range : 1000
    shift_steps : 1000
    
    
#### parameters for the estimation of clock errors
ce:
    # subfolder for storage of clock error results
    subdir : 'clock_error'
    res_dir : ''

    # Plotting
    plot_clock_error : True

    # Way to esimate clock errors
    # 'drift' for correcting a steady drift of the clock e.g. in ocean bottom seismometers
    # 'variable' if the clock errors vary with time e.g. for episodic GPG signals
    type : 'variable'
    # limit time range to estimate drift
    drift_start : '2011-12-23'
    drift_end : '2011-12-25'
    # Reference stations used to fix the absolute timing
    ref_stations : ['GR.CLL']

    
