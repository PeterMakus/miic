.. _measure_velocity_change_tutorial:

=======================
Measure Velocity change
=======================

************
Introduction
************

After the computation of noise correaltion functions and their rearrangement in correlation matrices (described here: :ref:`basics_correlation_tutorial`) these are available for further analysis for example to estimate changes of the seismic velocity.

**************************
Implementation in a script
**************************

The measurement of velocity changes is implemented in the ``miic.scripts.measure_velocity_change`` module which can be executed as python script and (:download:`downloaded here <../../../miic/scripts/measure_velocity_change.py>`). The script accepts a `yaml <http://yaml.org>`_ :download:`parameter file <../../../miic/scripts/monitoring_project.yaml>`. This parameter file has different sections. The general *project wide parameter* and the ones relevant for the computation of the noise correlation functions are described in :ref:`basics_correlation_tutorial` tutorial.

The measurment of the velocity changes works in an iterative way with the stretching method. An initial reference trace is calculated by stacking all availabe correlation functions. With respect to this reference initial measurement of velocity changes is obtained with tht stretching method. To obtain a new reference that does not suffer from incoherent stacking as a consequence of changeing velocity, the correlation functions are corrected for the initially measured velocity changes by appropriate stretching before stacking. Against this final reference a final measurement of velocity changes is performed. The results can be visualized and are saved by the script.


**************
Parameter File
**************

The ``miic.scripts.measure_velocity_change`` script used the ``dv`` section of the parameter file with the following entries::

    #### parameters for the estimation of time differences
    dv:
        # subfolder for storage of time difference results
        subdir : 'vel_change'

        # Plotting
        plot_vel_change : True

        ### Definition of calender time windows for the time difference measurements
        start_date : '2015-05-01 00:00:00.0'   # %Y-%m-%dT%H:%M:%S.%fZ'
        end_date : '2016-01-01 00:00:00.0'
        win_len : 86400                         # length of window in which EGFs are stacked
        date_inc : 86400                        # increment of measurements

        ### Frequencies
        freq_min : 0.1
        freq_max : 0.5

        ### Definition of lapse time window
        tw_start : 20     # lapse time of first sample [s]
        tw_len : 60       # length of window [s]
        
        ### Range to try stretching
        stretch_range : 0.03
        stretch_steps : 1000


